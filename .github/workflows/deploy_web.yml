name: Build and Deploy Flutter Web to Firebase Hosting

on:
  push:
    branches:
      - web-prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Clean previous builds
        run: flutter clean

      - name: Create .env file from secrets
        run: |
          echo "🔐 Creating .env file from GitHub Secrets..."
          cat > .env << EOF
          VERTEX_AI_PROJECT_ID=${{ secrets.VERTEX_AI_PROJECT_ID }}
          VERTEX_AI_LOCATION=${{ secrets.VERTEX_AI_LOCATION }}
          VERTEX_AI_MODEL=${{ secrets.VERTEX_AI_MODEL }}
          VERTEX_AI_SERVICE_ACCOUNT_KEY=${{ secrets.VERTEX_AI_SERVICE_ACCOUNT_KEY }}
          VERTEX_AI_MAX_TOKENS=${{ secrets.VERTEX_AI_MAX_TOKENS }}
          VERTEX_AI_TEMPERATURE=${{ secrets.VERTEX_AI_TEMPERATURE }}
          VERTEX_AI_TOP_P=${{ secrets.VERTEX_AI_TOP_P }}
          VERTEX_AI_TOP_K=${{ secrets.VERTEX_AI_TOP_K }}
          VERTEX_AI_MAX_CONVERSATION_HISTORY=${{ secrets.VERTEX_AI_MAX_CONVERSATION_HISTORY }}
          VERTEX_AI_MAX_RECENT_MESSAGES=${{ secrets.VERTEX_AI_MAX_RECENT_MESSAGES }}
          VERTEX_AI_MAX_STORED_MESSAGES=${{ secrets.VERTEX_AI_MAX_STORED_MESSAGES }}
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          LINKEDIN_CLIENT_ID=${{ secrets.LINKEDIN_CLIENT_ID }}
          LINKEDIN_CLIENT_SECRET=${{ secrets.LINKEDIN_CLIENT_SECRET }}
          LINKEDIN_REDIRECT_URI=${{ secrets.LINKEDIN_REDIRECT_URI }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          GOOGLE_MEET_CLIENT_ID=${{ secrets.GOOGLE_MEET_CLIENT_ID }}
          GOOGLE_MEET_CLIENT_SECRET=${{ secrets.GOOGLE_MEET_CLIENT_SECRET }}
          GOOGLE_MEET_REDIRECT_URI=${{ secrets.GOOGLE_MEET_REDIRECT_URI }}
          GOOGLE_MEET_SYNC_FUNCTION_URL=${{ secrets.GOOGLE_MEET_SYNC_FUNCTION_URL }}
          STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
          RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
          EOF
          
          echo "✅ .env file created successfully"
          echo "📋 .env file contents (first 5 lines):"
          head -5 .env
          echo "📊 Total lines in .env: $(wc -l < .env)"

      - name: Build Flutter web
        run: flutter build web --release --verbose

      - name: Verify .env file in build
        run: |
          echo "🔍 Checking if .env file is in build output..."
          if [ -f "build/web/.env" ]; then
            echo "✅ .env file found in build/web/"
            echo "📋 .env file contents (first 3 lines):"
            head -3 build/web/.env
          else
            echo "❌ .env file NOT found in build/web/"
            echo "📁 Files in build/web/:"
            ls -la build/web/ | head -10
          fi

      - name: Deploy to Firebase Hosting (live)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live
          entryPoint: .
